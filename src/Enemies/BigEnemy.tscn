[gd_scene load_steps=10 format=2]

[ext_resource path="res://src/Enemies/Enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/VFX/noise_tex.tres" type="Texture" id=2]
[ext_resource path="res://assets/textures/Orange/texture_08.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Actor

var target = null

var has_been_alerted := false

onready var navigation = get_parent()
onready var body := $RotationHelper/Body
onready var google := $RotationHelper/Google
onready var rotation_helper := $RotationHelper
onready var vision := $RotationHelper/Vision
onready var attack_zone := $RotationHelper/AttackZone
onready var damage_source := $RotationHelper/DamageSource
onready var anim := $AnimationPlayer
onready var fist := $RotationHelper/Fist
onready var alert := $RotationHelper/Alert


func _ready() -> void:
	add_to_group(\"enemies\")
	set_axis_lock(self.move_lock_x, true)
	attack_zone.connect(\"body_entered\", self, \"_on_Body_entered\")


func _on_Body_entered(body: Player) -> void:
	state_machine.transition_to(\"Attack\")
"

[sub_resource type="Animation" id=2]
resource_name = "Alert"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("RotationHelper/Alert:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -2.09197, 0 ), Vector3( 0, 3.9355, 0 ), Vector3( 0, 3.9355, 0 ), Vector3( 0, -2.09197, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RotationHelper/Alert:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.1, 0.1, 0.1 ), Vector3( 1, 1, 1 ), Vector3( 1, 1, 1 ), Vector3( 0.1, 0.1, 0.1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("RotationHelper/Alert:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 45, 0 ), Vector3( 0, 90, 0 ), Vector3( 0, 135, 0 ), Vector3( 0, 180, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AudioStreamPlayer3D_alert:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=3]
resource_name = "Attack"
length = 0.7
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("RotationHelper/Fist:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.36, 0.38, 0.4, 0.45, 0.55, 0.58, 0.61, 0.64, 0.7 ),
"transitions": PoolRealArray( 2, 2, 2, 2, 2, 1, 0.5, 0.5, 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector3( -0.333425, 0.0256329, -1.26629 ), Vector3( 5.09379, 0.0256329, -1.26629 ), Vector3( 5.09379, 0.0256329, -1.26629 ), Vector3( 5.09379, 0.0256329, -5.12522 ), Vector3( 1.98483, 0.0256329, -7.41927 ), Vector3( 1.98483, 0.0256329, -9.86963 ), Vector3( 1.98483, 0.0256329, -9.86963 ), Vector3( 1.98483, 0.0256329, -7.41927 ), Vector3( 5.09379, 0.0256329, -5.12522 ), Vector3( 5.09379, 0.0256329, -1.26629 ), Vector3( -0.333425, 0.0256329, -1.26629 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RotationHelper/Fist:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.36, 0.4, 0.45, 0.46, 0.65, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.1, 0.1, 0.1 ), Vector3( 1, 1, 1 ), Vector3( 1, 1, 1 ), Vector3( 1.2, 1, 1.5 ), Vector3( 1.2, 1.2, 1.2 ), Vector3( 1.5, 1.5, 1 ), Vector3( 1.5, 1.5, 1.5 ), Vector3( 0.1, 0.1, 0.1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("RotationHelper/DamageSource/CollisionShape:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.45, 0.56 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, false, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AudioStreamPlayer3D_woosh:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.35, 0.68 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 3, 3, 3 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "DEFAULT"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("RotationHelper/Fist:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( -0.333425, 0.0256329, -1.26629 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RotationHelper/Fist:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0.1, 0.1, 0.1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("RotationHelper/DamageSource/CollisionShape:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AudioStreamPlayer3D_alert:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("AudioStreamPlayer3D_woosh:playing")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("RotationHelper/Alert:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0.1, 0.1, 0.1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("RotationHelper/Alert:translation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, -2.09197, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 3, 3, 3 ) ]
}

[sub_resource type="Shader" id=5]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,world_vertex_coords,depth_draw_alpha_prepass,cull_disabled;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec4 emission_color : hint_color = vec4(1);
uniform float emission_amount;

uniform sampler2D dissolve_texture;
uniform float burn_size : hint_range(0,2);
uniform float dissolve_amount : hint_range(0,1);


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}


vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
		
	vec4 albedo_tex = texture(texture_albedo,UV);
	float sample = texture(dissolve_texture, UV).r;
	float emission_value = 1.0 - smoothstep(dissolve_amount, dissolve_amount + burn_size, sample);
	EMISSION = vec3(emission_value * emission_amount * emission_color.rgb);
	ALPHA = smoothstep(dissolve_amount - burn_size, dissolve_amount, sample);

//	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_blend_sharpness = 1.0
shader_param/uv1_scale = Vector3( 0.1, 0.1, 0.1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/emission_color = Color( 1, 1, 1, 1 )
shader_param/emission_amount = null
shader_param/burn_size = null
shader_param/dissolve_amount = null
shader_param/texture_albedo = ExtResource( 3 )
shader_param/dissolve_texture = ExtResource( 2 )

[node name="BigEnemy" instance=ExtResource( 1 )]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0 )
script = SubResource( 1 )
life = 60.0

[node name="AnimationPlayer" parent="." index="0"]
anims/Alert = SubResource( 2 )
anims/Attack = SubResource( 3 )
anims/DEFAULT = SubResource( 4 )

[node name="Body" parent="RotationHelper" index="3"]
material/0 = SubResource( 6 )

[node name="Alert" parent="RotationHelper" index="6"]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, -2.09197, 0 )

[node name="Follow" parent="StateMachine" index="1"]
speed = 35.0
look_at_speed = 8.0
